export type PropertyDetail = {
  name: string;
  label: string;
  description: string;
  expectedType: string;
  expectedUnit: string;
  synonyms: string[];
  canonical: string;
  reason?: string;
  example: {
    parentType: string;
    property: string;
    value: string | number | boolean;
  };
};

export const propertyDetails: Record<string, PropertyDetail> = {
  payload: {
    name: "payload",
    label: "Payload",
    description: "Maximale Nutzlast",
    expectedType: "Number",
    expectedUnit: "kg",
    synonyms: ["Tragfähigkeit", "Nutzlast", "Payload", "Max. Last"],
    canonical: "Payload",
    reason:
      '"Payload" ist der international gängigste Begriff und deckt Tragfähigkeit unabhängig vom Anwendungsfall (Stapler, Plattform, etc.) gut ab.',
    example: {
      parentType: "FTF",
      property: "payload",
      value: 30,
    },
  },
  towingCapacity: {
    name: "towingCapacity",
    label: "Towing Capacity",
    description: "Maximale Schlepp- oder Anhängelast",
    expectedType: "Number",
    expectedUnit: "kg",
    synonyms: ["Zugkraft", "Schleppkraft", "Towing Capacity", "Max. Anhängelast"],
    canonical: "Towing Capacity",
    reason:
      '"Towing Capacity" ist der international verständliche Begriff und beschreibt eindeutig die maximale Last, die ein Fahrzeug ziehen kann.',
    example: {
      parentType: "FTF",
      property: "towingCapacity",
      value: 500,
    },
  },
  dimensions: {
    name: "dimensions",
    label: "Dimensions (L x W x H)",
    description: "Abmessungen des Fahrzeugs (Länge x Breite x Höhe)",
    expectedType: "Text",
    expectedUnit: "mm",
    synonyms: ["Dimension", "Maße", "Maße L x B x H", "Abmessungen"],
    canonical: "Dimensions (L x W x H)",
    reason: '"Dimensions" ist klar verständlich und standardisiert.',
    example: {
      parentType: "FTF",
      property: "dimensions",
      value: "1200 x 800 x 1800",
    },
  },
  weightEmpty: {
    name: "weightEmpty",
    label: "Weight (empty)",
    description: "Eigengewicht des Fahrzeugs ohne Last",
    expectedType: "Number",
    expectedUnit: "kg",
    synonyms: ["Eigengewicht", "Gewicht", "Dead weight", "Empty weight"],
    canonical: "Weight (empty)",
    reason: '"Weight (empty)" ist am präzisesten, da es sich immer um das Gewicht ohne Last handelt.',
    example: {
      parentType: "FTF",
      property: "weightEmpty",
      value: 450,
    },
  },
  batteryVoltage: {
    name: "batteryVoltage",
    label: "Battery voltage",
    description: "Betriebsspannung der Batterie",
    expectedType: "Number",
    expectedUnit: "V",
    synonyms: ["Spannung", "Betriebsspannung", "Energy Storage", "Battery"],
    canonical: "Battery voltage",
    reason:
      '"Battery voltage" ist die zentrale technische Kennzahl für die Energieversorgung und international gebräuchlich.',
    example: {
      parentType: "FTF",
      property: "batteryVoltage",
      value: 48,
    },
  },
  chargingTime: {
    name: "chargingTime",
    label: "Charging time",
    description: "Zeit zum vollständigen Laden der Batterie",
    expectedType: "Number",
    expectedUnit: "min",
    synonyms: ["Ladezeit", "Charging"],
    canonical: "Charging time",
    reason: '"Charging time" ist international gebräuchlich und eindeutig.',
    example: {
      parentType: "FTF",
      property: "chargingTime",
      value: 60,
    },
  },
  maxSpeed: {
    name: "maxSpeed",
    label: "Max. speed",
    description: "Maximale Fahrgeschwindigkeit",
    expectedType: "Number",
    expectedUnit: "km/h",
    synonyms: ["Geschwindigkeit", "Fahrgeschwindigkeit", "Driving speed", "Speed"],
    canonical: "Max. speed",
    reason: '"Max. speed" ist prägnant und international verständlich.',
    example: {
      parentType: "FTF",
      property: "maxSpeed",
      value: 7.5,
    },
  },
  maxLiftHeight: {
    name: "maxLiftHeight",
    label: "Max. lift height",
    description: "Maximale Hubhöhe des Fahrzeugs",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Hubhöhe", "Max. Hubhöhe", "Station height", "Lift height"],
    canonical: "Max. lift height",
    reason:
      '"Max. lift height" umfasst sowohl Monomast- als auch Duplexvarianten und ist klarer als nur "Hubhöhe".',
    example: {
      parentType: "FTF",
      property: "maxLiftHeight",
      value: 3200,
    },
  },
  batteryCapacity: {
    name: "batteryCapacity",
    label: "Battery capacity (Ah)",
    description: "Kapazität der Batterie in Ampere-Stunden",
    expectedType: "Number",
    expectedUnit: "Ah",
    synonyms: ["Kapazität", "Battery", "Battery type"],
    canonical: "Battery capacity (Ah)",
    reason:
      '"Battery capacity (Ah)" ist international verständlich und auf Ampere-Stunden (Ah) bezogen für Vergleichbarkeit.',
    example: {
      parentType: "FTF",
      property: "batteryCapacity",
      value: 240,
    },
  },
  chargingMethod: {
    name: "chargingMethod",
    label: "Charging method",
    description: "Art des Ladevorgangs (manuell, automatisch, induktiv, etc.)",
    expectedType: "Text",
    expectedUnit: "",
    synonyms: ["Charging", "Ladevorgang", "Automatisches Laden", "Manueller Ladevorgang"],
    canonical: "Charging method",
    reason:
      '"Charging method" deckt alle Optionen (manuell, automatisch, induktiv, etc.) unter einem Oberbegriff ab.',
    example: {
      parentType: "FTF",
      property: "chargingMethod",
      value: "Automatisch, Induktiv",
    },
  },
  positioningAccuracy: {
    name: "positioningAccuracy",
    label: "Positioning accuracy",
    description: "Genauigkeit der Fahrzeugpositionierung",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Positioniergenauigkeit", "Positioning accuracy"],
    canonical: "Positioning accuracy",
    reason: '"Positioning accuracy" ist international gebräuchlich.',
    example: {
      parentType: "FTF",
      property: "positioningAccuracy",
      value: 10,
    },
  },
  navigationMethod: {
    name: "navigationMethod",
    label: "Navigation method",
    description: "Verwendetes Navigationsverfahren",
    expectedType: "Text",
    expectedUnit: "",
    synonyms: ["Navigation", "Guidance", "Localization"],
    canonical: "Navigation method",
    reason:
      '"Navigation method" fasst SLAM, Laser, optische Spurführung, Transponder etc. unter einem neutralen, funktionalen Begriff zusammen.',
    example: {
      parentType: "FTF",
      property: "navigationMethod",
      value: "Laser, SLAM",
    },
  },
  safetyFeatures: {
    name: "safetyFeatures",
    label: "Safety features",
    description: "Sicherheitsmechanismen und -funktionen",
    expectedType: "Text",
    expectedUnit: "",
    synonyms: ["Personensicherheit", "Safety", "Personenschutz", "Sicherheits-Laserscanner"],
    canonical: "Safety features",
    reason:
      '"Safety features" ist ein Sammelbegriff für alle Sicherheitsmechanismen (Scanner, Not-Aus, Warnfelder, etc.).',
    example: {
      parentType: "FTF",
      property: "safetyFeatures",
      value: "Laserscanner, Not-Aus, Warnfelder",
    },
  },

  // Ab hier Properties ohne Vereinheitlichungsbegründung (nur wenn mehrere Herstellerbegriffe → reason, sonst leer)
  name: {
    name: "name",
    label: "Name",
    description: "Modellbezeichnung des Fahrzeugs",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Modellbezeichnung", "Typenbezeichnung"],
    canonical: "Name",
    example: { parentType: "FTF", property: "name", value: "FTF-Model-X" },
  },
  manufacturer: {
    name: "manufacturer",
    label: "Hersteller",
    description: "Herstellername",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Hersteller", "Fabrikant", "Produzent"],
    canonical: "Manufacturer",
    example: { parentType: "FTF", property: "manufacturer", value: "KUKA" },
  },
  vehicleType: {
    name: "vehicleType",
    label: "Fahrzeugtyp",
    description: "Typ: FTF, AMR, Gegengewichtsstapler, Schlepper, Plattform, etc.",
    expectedType: "Enumeration",
    expectedUnit: "–",
    synonyms: ["Fahrzeugtyp", "Typ", "Kategorie"],
    canonical: "Vehicle type",
    example: { parentType: "FTF", property: "vehicleType", value: "FTF" },
  },
  application: {
    name: "application",
    label: "Einsatzgebiet",
    description: "Einsatzgebiet: z. B. Lagerlogistik, Montage, Mischverkehr etc.",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Einsatzgebiet", "Anwendungsbereich"],
    canonical: "Application",
    example: { parentType: "FTF", property: "application", value: "Lagerlogistik" },
  },
  navigationType: {
    name: "navigationType",
    label: "Navigationsart",
    description: "Art der Navigation: Laser, SLAM, Optisch, QR, Kontrastlinie, Magnet, Umgebungsnavigation, etc.",
    expectedType: "Enumeration",
    expectedUnit: "–",
    synonyms: ["Navigationsart", "Navigationstyp"],
    canonical: "Navigation type",
    example: { parentType: "FTF", property: "navigationType", value: "Laser" },
  },
  drivingMode: {
    name: "drivingMode",
    label: "Betriebsmodus",
    description: "Betriebsmodi (autonom, manuell, remote)",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Betriebsmodus", "Fahrmodus"],
    canonical: "Driving mode",
    example: { parentType: "FTF", property: "drivingMode", value: "autonom" },
  },
  availability: {
    name: "availability",
    label: "Verfügbarkeit",
    description: "Ist das Fahrzeug derzeit am Markt verfügbar?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Verfügbarkeit", "am Markt"],
    canonical: "Availability",
    example: { parentType: "FTF", property: "availability", value: true },
  },
  firstReleaseYear: {
    name: "firstReleaseYear",
    label: "Markteinführung",
    description: "Markteinführung (Jahreszahl)",
    expectedType: "Number",
    expectedUnit: "Jahr",
    synonyms: ["Markteinführung", "Erstverkauf", "Release"],
    canonical: "First release year",
    example: { parentType: "FTF", property: "firstReleaseYear", value: 2022 },
  },
  length: {
    name: "length",
    label: "Länge",
    description: "Gesamtlänge des Fahrzeugs",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Länge", "Gesamtlänge"],
    canonical: "Length",
    example: { parentType: "FTF", property: "length", value: 1800 },
  },
  width: {
    name: "width",
    label: "Breite",
    description: "Gesamtbreite",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Breite", "Gesamtbreite"],
    canonical: "Width",
    example: { parentType: "FTF", property: "width", value: 800 },
  },
  height: {
    name: "height",
    label: "Höhe",
    description: "Höhe (z. B. mit Mast oder gesenkt)",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Höhe", "Gesamthöhe"],
    canonical: "Height",
    example: { parentType: "FTF", property: "height", value: 1800 },
  },
  turningRadius: {
    name: "turningRadius",
    label: "Wenderadius",
    description: "Wenderadius",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Wenderadius", "Mindestwenderadius"],
    canonical: "Turning radius",
    example: { parentType: "FTF", property: "turningRadius", value: 1200 },
  },
  aisleWidthMin: {
    name: "aisleWidthMin",
    label: "Minimale Gangbreite",
    description: "Minimale Gangbreite (AST)",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Gangbreite", "AST", "Minimale Gangbreite"],
    canonical: "Minimum aisle width",
    example: { parentType: "FTF", property: "aisleWidthMin", value: 1400 },
  },
  passageWidthMin: {
    name: "passageWidthMin",
    label: "Minimale Durchfahrtsbreite",
    description: "Minimale Durchfahrtsbreite",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Durchfahrtsbreite", "Minimale Durchfahrtsbreite"],
    canonical: "Minimum passage width",
    example: { parentType: "FTF", property: "passageWidthMin", value: 900 },
  },
  underclearance: {
    name: "underclearance",
    label: "Unterfahrhöhe",
    description: "Unterfahrhöhe (falls Plattform)",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Unterfahrhöhe"],
    canonical: "Underclearance",
    example: { parentType: "FTF", property: "underclearance", value: 120 },
  },
  groundClearance: {
    name: "groundClearance",
    label: "Bodenfreiheit",
    description: "Bodenfreiheit",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Bodenfreiheit"],
    canonical: "Ground clearance",
    example: { parentType: "FTF", property: "groundClearance", value: 60 },
  },
  wheelBase: {
    name: "wheelBase",
    label: "Radstand",
    description: "Radstand",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Radstand"],
    canonical: "Wheel base",
    example: { parentType: "FTF", property: "wheelBase", value: 1200 },
  },
  maxSpeedLoaded: {
    name: "maxSpeedLoaded",
    label: "Max. Geschwindigkeit (beladen)",
    description: "Höchstgeschwindigkeit mit Last",
    expectedType: "Number",
    expectedUnit: "km/h",
    synonyms: ["Max. Geschwindigkeit beladen", "Speed loaded"],
    canonical: "Max speed (loaded)",
    example: { parentType: "FTF", property: "maxSpeedLoaded", value: 6 },
  },
  maxSpeedUnloaded: {
    name: "maxSpeedUnloaded",
    label: "Max. Geschwindigkeit (unbeladen)",
    description: "Höchstgeschwindigkeit ohne Last",
    expectedType: "Number",
    expectedUnit: "km/h",
    synonyms: ["Max. Geschwindigkeit unbeladen", "Speed unloaded"],
    canonical: "Max speed (unloaded)",
    example: { parentType: "FTF", property: "maxSpeedUnloaded", value: 8 },
  },
  maxGradient: {
    name: "maxGradient",
    label: "Maximale Steigfähigkeit",
    description: "Maximale Steigfähigkeit",
    expectedType: "Number",
    expectedUnit: "%",
    synonyms: ["Steigfähigkeit", "Max. Steigung"],
    canonical: "Maximum gradient",
    example: { parentType: "FTF", property: "maxGradient", value: 10 },
  },
  angularAccuracy: {
    name: "angularAccuracy",
    label: "Drehwinkelgenauigkeit",
    description: "Drehwinkelgenauigkeit (falls spezifiziert)",
    expectedType: "Number",
    expectedUnit: "°",
    synonyms: ["Drehwinkelgenauigkeit"],
    canonical: "Angular accuracy",
    example: { parentType: "FTF", property: "angularAccuracy", value: 2 },
  },
  acceleration: {
    name: "acceleration",
    label: "Beschleunigung",
    description: "Beschleunigung",
    expectedType: "Number",
    expectedUnit: "m/s²",
    synonyms: ["Beschleunigung"],
    canonical: "Acceleration",
    example: { parentType: "FTF", property: "acceleration", value: 0.8 },
  },
  deceleration: {
    name: "deceleration",
    label: "Verzögerung",
    description: "Verzögerung",
    expectedType: "Number",
    expectedUnit: "m/s²",
    synonyms: ["Verzögerung"],
    canonical: "Deceleration",
    example: { parentType: "FTF", property: "deceleration", value: 1.2 },
  },
  batteryType: {
    name: "batteryType",
    label: "Batterietyp",
    description: "z. B. Lithium-Ion, Blei-Säure, LiFePO4, etc.",
    expectedType: "Enumeration",
    expectedUnit: "–",
    synonyms: ["Batterietyp", "Akkutyp"],
    canonical: "Battery type",
    example: { parentType: "FTF", property: "batteryType", value: "Lithium-Ion" },
  },
  chargingType: {
    name: "chargingType",
    label: "Ladeart",
    description: "Manuell, Automatisch, Induktiv, Austauschbar",
    expectedType: "Enumeration",
    expectedUnit: "–",
    synonyms: ["Ladeart", "Lademodus"],
    canonical: "Charging type",
    example: { parentType: "FTF", property: "chargingType", value: "Automatisch" },
  },
  runtime: {
    name: "runtime",
    label: "Betriebsdauer",
    description: "Betriebsdauer mit einer Ladung",
    expectedType: "Number",
    expectedUnit: "h",
    synonyms: ["Betriebsdauer", "Laufzeit"],
    canonical: "Runtime",
    example: { parentType: "FTF", property: "runtime", value: 8 },
  },
  batteryExchangeable: {
    name: "batteryExchangeable",
    label: "Akku austauschbar",
    description: "Ist der Akku austauschbar?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Akku austauschbar", "Wechselakku"],
    canonical: "Battery exchangeable",
    example: { parentType: "FTF", property: "batteryExchangeable", value: true },
  },
  driveType: {
    name: "driveType",
    label: "Antriebsart",
    description: "Art des Antriebs: DC, AC, Mecanum, Omnidirektional",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Antriebsart", "Antrieb"],
    canonical: "Drive type",
    example: { parentType: "FTF", property: "driveType", value: "Mecanum" },
  },
  motorPower: {
    name: "motorPower",
    label: "Motorleistung",
    description: "Antriebsleistung",
    expectedType: "Number",
    expectedUnit: "W",
    synonyms: ["Motorleistung", "Leistung"],
    canonical: "Motor power",
    example: { parentType: "FTF", property: "motorPower", value: 1500 },
  },
  brakingSystem: {
    name: "brakingSystem",
    label: "Bremssystem",
    description: "Art des Bremssystems (elektrisch, mechanisch, elektromagnetisch)",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Bremssystem", "Bremsen"],
    canonical: "Braking system",
    example: { parentType: "FTF", property: "brakingSystem", value: "elektrisch" },
  },
  safetyScanner: {
    name: "safetyScanner",
    label: "Sicherheitslaserscanner",
    description: "Ob Sicherheitslaserscanner verbaut sind",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Sicherheitslaserscanner", "Laserscanner"],
    canonical: "Safety scanner",
    example: { parentType: "FTF", property: "safetyScanner", value: true },
  },
  lidarType: {
    name: "lidarType",
    label: "Lidar-Typ",
    description: "Lidar-Marken / Typen",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Lidar-Typ", "Lidar"],
    canonical: "Lidar type",
    example: { parentType: "FTF", property: "lidarType", value: "SICK" },
  },
  sensors: {
    name: "sensors",
    label: "Sensorik",
    description: "Eingebaute Sensorik (z. B. Lidar, Kamera)",
    expectedType: "List",
    expectedUnit: "–",
    synonyms: ["Sensorik", "Sensoren"],
    canonical: "Sensors",
    example: { parentType: "FTF", property: "sensors", value: "Lidar, Kamera" },
  },
  protectionClass: {
    name: "protectionClass",
    label: "Schutzart",
    description: "Schutzart gemäß IP-Norm",
    expectedType: "Text",
    expectedUnit: "IP-Code",
    synonyms: ["Schutzart", "IP-Code"],
    canonical: "Protection class",
    example: { parentType: "FTF", property: "protectionClass", value: "IP54" },
  },
  safetyStandard: {
    name: "safetyStandard",
    label: "Sicherheitsstandard",
    description: "z. B. DIN EN ISO 13849-1, PLd",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Sicherheitsstandard", "Norm"],
    canonical: "Safety standard",
    example: { parentType: "FTF", property: "safetyStandard", value: "ISO 13849-1" },
  },
  certifications: {
    name: "certifications",
    label: "Zertifikate",
    description: "Sicherheitszertifikate (z. B. ISO, PL-Level)",
    expectedType: "List",
    expectedUnit: "–",
    synonyms: ["Zertifikate", "Zertifizierung"],
    canonical: "Certifications",
    example: { parentType: "FTF", property: "certifications", value: "ISO 13849-1" },
  },
  redundantSafetySystems: {
    name: "redundantSafetySystems",
    label: "Redundante Sicherheitssysteme",
    description: "Sind sicherheitsrelevante Systeme redundant ausgelegt?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Redundante Sicherheitssysteme", "Redundanz"],
    canonical: "Redundant safety systems",
    example: { parentType: "FTF", property: "redundantSafetySystems", value: true },
  },
  interfaces: {
    name: "interfaces",
    label: "Schnittstellen",
    description: "z. B. ROS, USB, Ethernet, HDMI",
    expectedType: "List",
    expectedUnit: "–",
    synonyms: ["Schnittstellen", "Interfaces"],
    canonical: "Interfaces",
    example: { parentType: "FTF", property: "interfaces", value: "ROS, USB" },
  },
  communicationProtocols: {
    name: "communicationProtocols",
    label: "Kommunikationsprotokolle",
    description: "WLAN, Bluetooth, LTE, 5G",
    expectedType: "List",
    expectedUnit: "–",
    synonyms: ["Kommunikationsprotokolle", "Protokolle"],
    canonical: "Communication protocols",
    example: { parentType: "FTF", property: "communicationProtocols", value: "WLAN, Bluetooth" },
  },
  flottensteuerungCompatible: {
    name: "flottensteuerungCompatible",
    label: "Flottensteuerung kompatibel",
    description: "Unterstützt Flottenmanager (z. B. VDA 5050)?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Flottensteuerung kompatibel", "VDA 5050"],
    canonical: "Fleet management compatible",
    example: { parentType: "FTF", property: "flottensteuerungCompatible", value: true },
  },
  remoteMonitoring: {
    name: "remoteMonitoring",
    label: "Fernüberwachung",
    description: "Fernüberwachung und -diagnose möglich?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Fernüberwachung", "Remote Monitoring"],
    canonical: "Remote monitoring",
    example: { parentType: "FTF", property: "remoteMonitoring", value: true },
  },
  softwareUpdatesOTA: {
    name: "softwareUpdatesOTA",
    label: "OTA-Updates",
    description: "Over-the-Air-Updates unterstützt?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["OTA-Updates", "Over-the-Air Updates"],
    canonical: "OTA updates",
    example: { parentType: "FTF", property: "softwareUpdatesOTA", value: true },
  },
  localizationSystem: {
    name: "localizationSystem",
    label: "Lokalisierungssystem",
    description: "SLAM, Markerless, Laser, etc.",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Lokalisierungssystem", "Lokalisierung"],
    canonical: "Localization system",
    example: { parentType: "FTF", property: "localizationSystem", value: "SLAM" },
  },
  hmiAvailable: {
    name: "hmiAvailable",
    label: "HMI verfügbar",
    description: "Hat ein Human Machine Interface (Display)?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["HMI verfügbar", "Display vorhanden"],
    canonical: "HMI available",
    example: { parentType: "FTF", property: "hmiAvailable", value: true },
  },
  displaySize: {
    name: "displaySize",
    label: "Displaygröße",
    description: "Diagonale des Displays",
    expectedType: "Number",
    expectedUnit: "inch",
    synonyms: ["Displaygröße", "Bildschirmgröße"],
    canonical: "Display size",
    example: { parentType: "FTF", property: "displaySize", value: 10.1 },
  },
  manualOverride: {
    name: "manualOverride",
    label: "Manuelle Übersteuerung",
    description: "Kann manuell gesteuert / übersteuert werden",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Manuelle Übersteuerung", "Handbetrieb"],
    canonical: "Manual override",
    example: { parentType: "FTF", property: "manualOverride", value: true },
  },
  softwarePlatform: {
    name: "softwarePlatform",
    label: "Softwareplattform",
    description: "Unterstützte Software/Interfaces (z. B. ROS)",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Softwareplattform", "Software"],
    canonical: "Software platform",
    example: { parentType: "FTF", property: "softwarePlatform", value: "ROS" },
  },
  multiVehicleCoordination: {
    name: "multiVehicleCoordination",
    label: "Mehrfahrzeug-Koordination",
    description: "Koordination mit anderen Fahrzeugen möglich?",
    expectedType: "Boolean",
    expectedUnit: "–",
    synonyms: ["Mehrfahrzeug-Koordination", "Koordination"],
    canonical: "Multi-vehicle coordination",
    example: { parentType: "FTF", property: "multiVehicleCoordination", value: true },
  },
  loadHandlingDevice: {
    name: "loadHandlingDevice",
    label: "Lastaufnahmemittel",
    description: "Plattform, Gabeln, Schleppkupplung etc.",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Lastaufnahmemittel", "Aufnahmegerät"],
    canonical: "Load handling device",
    example: { parentType: "FTF", property: "loadHandlingDevice", value: "Gabeln" },
  },
  liftHeightMax: {
    name: "liftHeightMax",
    label: "Maximale Hubhöhe",
    description: "Maximale Hubhöhe",
    expectedType: "Number",
    expectedUnit: "mm",
    synonyms: ["Maximale Hubhöhe", "Hubhöhe"],
    canonical: "Maximum lift height",
    example: { parentType: "FTF", property: "liftHeightMax", value: 3200 },
  },
  liftSystemType: {
    name: "liftSystemType",
    label: "Hubsystemtyp",
    description: "Elektromechanisch, Hydraulisch etc.",
    expectedType: "Text",
    expectedUnit: "–",
    synonyms: ["Hubsystemtyp", "Hubsystem"],
    canonical: "Lift system type",
    example: { parentType: "FTF", property: "liftSystemType", value: "Hydraulisch" },
  },
  noiseLevel: {
    name: "noiseLevel",
    label: "Geräuschpegel",
    description: "Geräuschentwicklung im Betrieb",
    expectedType: "Number",
    expectedUnit: "dB",
    synonyms: ["Geräuschpegel", "Lautstärke"],
    canonical: "Noise level",
    example: { parentType: "FTF", property: "noiseLevel", value: 65 },
  },
  operatingTemperatureMin: {
    name: "operatingTemperatureMin",
    label: "Min. Betriebstemperatur",
    description: "Minimale zulässige Umgebungstemperatur",
    expectedType: "Number",
    expectedUnit: "°C",
    synonyms: ["Min. Betriebstemperatur", "Minimale Temperatur"],
    canonical: "Minimum operating temperature",
    example: { parentType: "FTF", property: "operatingTemperatureMin", value: -10 },
  },
  operatingTemperatureMax: {
    name: "operatingTemperatureMax",
    label: "Max. Betriebstemperatur",
    description: "Maximale zulässige Umgebungstemperatur",
    expectedType: "Number",
    expectedUnit: "°C",
    synonyms: ["Max. Betriebstemperatur", "Maximale Temperatur"],
    canonical: "Maximum operating temperature",
    example: { parentType: "FTF", property: "operatingTemperatureMax", value: 40 },
  },
  humidityRange: {
    name: "humidityRange",
    label: "Luftfeuchtigkeitsbereich",
    description: "Zulässiger Luftfeuchtigkeitsbereich",
    expectedType: "Text",
    expectedUnit: "%",
    synonyms: ["Luftfeuchtigkeitsbereich", "Feuchtebereich"],
    canonical: "Humidity range",
    example: { parentType: "FTF", property: "humidityRange", value: "10-90%" },
  },
};

// Hilfsfunktion für Details aus localStorage
export function getPropertyDetail(name: string): PropertyDetail | undefined {
  const raw = localStorage.getItem("customPropertyDetails");
  if (raw) {
    const customDetails = JSON.parse(raw);
    if (customDetails[name]) return customDetails[name];
  }
  if (propertyDetails[name]) return propertyDetails[name];
  return undefined;
}